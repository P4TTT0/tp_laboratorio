/*
 ============================================================================
 Name        : TP_1.c
 Author      : Perez Cardenal Patricio
 Version     :
 Copyright   : TTT
 Description : TP_1 GITHUB
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include "funciones.h" //Incluir la bibloteca creada con ("")

void MenuPrincipal();

int main(void)
{
	setbuf(stdout, NULL);


	MenuPrincipal();

	return EXIT_SUCCESS;
}

void MenuPrincipal()
{
	setbuf(stdout, NULL);

	int opcionIngresada;
	int vueloIngresado;

	float x;
	float y;
	float z;

	int banderaDatosCargados;

	//VARIABLES PARA GUARDAR DATOS DE AEROLINEAS-----
	float PrecioDebitoAerolineas;
	float PrecioCreditoAerolineas;
	float PrecioBitcoinAerolineas;
	float PrecioUnitarioAerolineas;

	//VARIABLES PARA GUARDAR DATOS DE LATAM------
	float PrecioDebitoLatam;
	float PrecioCreditoLatam;
	float PrecioBitcoinLatam;
	float PrecioUnitarioLatam;

	//VARIABLE PARA GUARDAR DIFERENCIA DE PRECIOS-----
	float PrecioDiferencia;

	x = 0;
	y = 0;
	z = 0;
	banderaDatosCargados = 0;

	PrecioDebitoAerolineas = 0;
	PrecioCreditoAerolineas = 0;
	PrecioBitcoinAerolineas = 0;
	PrecioUnitarioAerolineas = 0;

	PrecioDebitoLatam = 0;

	do
	{
		printf("|----- > Seleccione una opcion < -----|\n\n");
		printf("\n1-| Ingresar KM |->");
		printf("\n2-| Ingresar precio de vuelvos |->");
		printf("\n3-| Calcular costos |->");
		printf("\n4-| Informar resultados |->");
		printf("\n5-| Carga forzada de datos |->");
		printf("\n6-| SALIR |->\n");

		Separador();

		printf("\nIngrese opcion:");
		fflush(stdin);
		scanf("%d", &opcionIngresada);

		while(opcionIngresada < 1 || opcionIngresada > 6)
		{
			Clear();
			Error("option", "INGRESE UNA OPCION VALIDA");

			printf("|----- > Seleccione una opcion < -----|\n\n");
			printf("\n1-| Ingresar KM |->");
			printf("\n2-| Ingresar precio de vuelvos |->");
			printf("\n3-| Calcular costos |->");
			printf("\n4-| Informar resultados |->");
			printf("\n5-| Carga forzada de datos |->");
			printf("\n6-| SALIR |->\n");

			Separador();

			printf("\nIngrese opcion:");
			fflush(stdin);
			scanf("%d", &opcionIngresada);
		}

		switch(opcionIngresada)
		{
		case 1:
			Clear();
			OpcionElegida(opcionIngresada);
			x = ValidarNumero("Ingrese los KM del viaje: ", 3, 21602);
			SystemPause("\n|---------- DATOS CARGADOS ----------|\n");
		break;

		case 2:
			Clear();
			OpcionElegida(opcionIngresada);
			printf("Seleccione un VUELO: \n 1 - Precio vuelo AEROLINEAS\n 2 - Precio vuelo LATAM\n");
			Separador();
			printf("\nIngrese opcion:");
			fflush(stdin);
			scanf("%d", &vueloIngresado);

			while(vueloIngresado < 1 || vueloIngresado > 2)
			{
				Clear();
				Error("option", "INGRESE UNA OPCION VALIDA");
				OpcionElegida(opcionIngresada);
				printf("Seleccione un VUELO: \n 1 - Precio vuelo AEROLINEAS\n 2 - Precio vuelo LATAM\n");
				Separador();
				printf("\nIngrese opcion:");
				fflush(stdin);
				scanf("%d", &vueloIngresado);
			}

			switch(vueloIngresado)
			{
			case 1:
				OpcionElegida(vueloIngresado);
				y = ValidarNumero("Ingrese el precio de AEROLINEAS: ", 1000, 100000);
				SystemPause("\n|---------- DATOS CARGADOS ----------|\n");
			break;
			case 2:
				OpcionElegida(vueloIngresado);
				z = ValidarNumero("Ingrese el precio de LATAM: ", 500, 50000);
				SystemPause("\n|---------- DATOS CARGADOS ----------|\n");
			break;
			default:
				Error("option", "INGRESE UNA OPCION VALIDA");
				Separador();
				printf("\nIngrese opcion:");
				fflush(stdin);
				scanf("%d", &vueloIngresado);
			break;
			}
		break;

		case 3:
			if (x == 0 || y == 0 || z == 0)
			{
				Error("option", "FALTAN CARGAR DATOS");
				SystemPause("\n|----------> COMPLETE LOS DATOS <----------|\n");
			}
			else
			{
				//CALCULAR AEROLINEAS---------
				CalcularPrecioDebito(y);
				CalcularPrecioCredito(y);
				CalcularPrecioBitcoin(y);
				CalcularPrecioUnitario(x, y);

				//CALCULAR LATAM---------------
				CalcularPrecioDebito(z);
				CalcularPrecioCredito(z);
				CalcularPrecioBitcoin(z);
				CalcularPrecioUnitario(x, z);

				//DIFERENCIA DE PRECIOS----------
				CalcularDiferenciaPrecio(y, z);

				//BANDERA DE DATOS CARGADOS-----------
				banderaDatosCargados = 1;

				//MENSAJE DE CONFIRMACION---------
				Clear();
				SystemPause("\n|---------- DATOS CALCULADOS ----------|\n");
			}
		break;

		case 4:
			if (banderaDatosCargados == 0)
			{
				Clear();
				Error("option","FALTA CARGAR DATOS");
				SystemPause("\n|----------> COMPLETE LOS DATOS <----------|\n");
			}
			else
			{

			}
		break;
		case 5:
		break;
		case 6:
		break;
		default:
		break;
		}

	}while(opcionIngresada != 6);
}
